version: "3.8"

networks:
  default:
    name: backend

services:

  postgres:
    image: postgres:16.1-alpine
    restart: always
    container_name: "db"
    env_file:
      - .env
    ports:
      - "6432:5432"
    volumes:
      - db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  price-service:
    depends_on:
      - postgres
    image: 'price-service:latest'
    build: ./
    ports:
      - "8080:8080"
    container_name: price-service
    env_file:
      - .env
    environment:
      - DATASOURCE_URL=jdbc:postgresql://db:5432/${DATABASE_NAME}
      - DATASOURCE_USERNAME=${DATABASE_USER}
      - DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
      - TELEGRAM_BOT_SERVICE_URL=telegram-bot-service:8080
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
       - zookeeper
    ports:
       - 29092:29092
    environment:
       KAFKA_BROKER_ID: 1
       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:

volumes:
  db:
    driver: local
